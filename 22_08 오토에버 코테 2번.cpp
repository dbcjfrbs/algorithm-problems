//문제
// 자동차의 사이드 미러에는 "사물이 거울에 보이는 것보다 가까이 있음"이라는 문구가 적혀 있다. 
//
//자동차의 사이드 미러에는 시야각을 넓히고 사각을 줄이기 위해 곡면이 있는 거울을 사용하지만, 이로 인해 현상이 왜곡되어 보이는 문제가 발생한다. 또 운전자의 시각에서 거울에 비친 상은 좌우가 반전되어 보이는데, 이로 인해 신속한 인지 및 대처가 필요한 구급차에 좌우가 반전된 글씨를 붙이기도 한다.
//
//
//
// 이렇듯 사이드 미러는 그 핵심적인 역할에도 불구하고 여러 단점을 가지고 있다. 당신은 사이드 미러의 이용성을 개선하기 위한 연구를 진행 중이다. 특히 사이드 미러에서 물체의 형상을 관찰해내는 방법을 고민 중이다.
//
//
//
//따라서 당신은 카메라가 촬영한 이미지가 주어지면 원하는 물체가 찍혀 있는지를 확인하는 프로그램을 작성하고자 한다. 원하는 물체의 패턴 이미지 역시 주어진다. 촬영된 이미지와 패턴 이미지 모두 단색이기에, 0 이상 255 이하의 값을 가지는 픽셀로 이루어진 격자 모양으로 생각할 수 있다. 그러나 광량에 따른 변화를 고려해야 하므로, 패턴 이미지의 픽셀 값들에 적당한 정수를 더해 촬영된 이미지의 일부를 만들 수 있다면 이를 물체가 존재하는 것으로 취급한다.
//
//
//
//촬영된 이미지를 나타내는 N행 M열의 정수 격자, 그리고 패턴 이미지를 나타내는 H행 W열의 정수 격자가 주어졌을 때, 촬영된 이미지에 원하는 패턴이 나타나는지를 확인하는 프로그램을 작성하시오.
//
//제약조건
//3≤N≤100
//
//3≤M≤100
//
//2≤H＜N
//
//2≤W＜M
//
//입력형식
//첫째 줄에 촬영된 이미지의 크기를 나타내는 두 정수 N과 M이 주어진다.
//
//이어 N개의 줄에 촬영된 이미지가 주어진다. 각 줄에는 M개의 0 이상 255 이하의 정수가 공백을 사이에 두고 주어진다.
//
//다음 줄에 패턴 이미지의 크기를 나타내는 두 정수 H와 W가 주어진다.
//
//이어 H개의 줄에 패턴 이미지가 주어진다. 각 줄에는 W개의 0 이상 255 이하의 정수가 공백을 사이에 두고 주어진다.
//
//출력형식
//패턴이 촬영된 이미지에 존재하면 yes를, 존재하지 않으면 no를 출력한다. 
//
//입력예제1복사하기
//55
//31415
//91011123
//51011129
//31011124
//62643
//33
//123
//123
//123
//출력예제1
//yes
//1 2 3
//
//1 2 3
//
//1 2 3
//
//1씩 증가하는 위 패턴이 촬영된 이미지 상에 아래의 패턴으로 존재한다.
//
//10 11 12
//
//10 11 12
//
//10 11 12
//
//입력예제2복사하기
//55
//191108114106133
//13011710912463
//10356201193220
//33203245199150
//20414220115289
//23
//776996
//167526
//출력예제2
//no
//



#include<iostream>
using namespace std;

int n, m, h, w;
int map[100][100], pat[100][100];

void init(){
	cin >> n >> m;
	for(int i=0; i<n; i++){
		for(int j=0; j<m; j++) cin >> map[i][j];
	}

	cin >> h >> w;
	for(int i=0; i<h; i++){
		for(int j=0; j<w; j++) cin >> pat[i][j];
	}
	return ;
}

bool isFit(int x, int y){
	int val=map[x][y]-pat[0][0];
	for(int i=0; i<h; i++){
		for(int j=0; j<w; j++){
			int val2=map[x+i][y+j]-pat[i][j];
			if(val!=val2){
				return false;
			}
		}
	}
	return true;
}

int main(int argc, char** argv)
{
	init();
	for(int i=0; i<=n-h; i++){
		for(int j=0; j<=m-w; j++){
			if(isFit(i, j)){
				cout << "yes";
				return 0;
			}
		}
	}
	cout << "no";	
	return 0;
}
